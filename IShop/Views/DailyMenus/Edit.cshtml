@using IShop.Models
@model dynamic
@{
    DailyMenu dailyMenu = Model.dailyMenu;
}
@{
    ViewBag.Title = "Edit";
}

<h2>Редактировать</h2>


@using (Html.BeginForm())
{
    @Html.AntiForgeryToken()

    <div class="form-horizontal">
        <hr />
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
        @Html.HiddenFor(model => dailyMenu.DailyMenuID)

        <div class="form-group">
            @Html.LabelFor(model => dailyMenu.DailyMenuName, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => dailyMenu.DailyMenuName, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => dailyMenu.DailyMenuName, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => dailyMenu.Calorie, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => dailyMenu.Calorie, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => dailyMenu.Calorie, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => dailyMenu.Price, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => dailyMenu.Price, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => dailyMenu.Price, "", new { @class = "text-danger" })
            </div>
        </div>

        @Html.Label("Блюда", htmlAttributes: new { @class = "control-label col-md-2" })<br />
        <div class="col-md-10">
            @foreach (Dish c in ViewBag.Dishes)
            {
                <input type="checkbox" name="selectedDishes" value="@c.DishID"
                       @(dailyMenu.Dishes.Contains(c) ? "checked=\"checked\"" : "") /> @c.DishName <br />

                }
        </div>

        <div class="form-group">
            <div class="col-md-offset-2 col-md-10">
                <input type="submit" value="Сохранить" class="btn btn-default" />
            </div>
        </div>
    </div>
}

<div>
    @Html.ActionLink("Вернуться к рационам", "Index", null, new { @class = "btn btn-default" })
</div>

@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")

    <script>
    // переопределение валидации на стороне клиента
    $.validator.methods.range = function (value, element, param) {
        var globalizedValue = value.replace(",", ".");
        return this.optional(element) || (globalizedValue >= param[0] && globalizedValue <= param[1]);
    }

    $.validator.methods.number = function (value, element) {
        return this.optional(element) || /^-?(?:\d+|\d{1,3}(?:[\s\.,]\d{3})+)(?:[\.,]\d+)?$/.test(value);
    }
    </script>
}